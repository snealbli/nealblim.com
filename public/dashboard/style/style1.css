/* ╔═══════════════════════════════════════════════╦═════════════════════════╦══════════╗
 * ║ CSS Social Media Cube                         ║ Created:   18 Nov. 2019 ║ v1.0.0.0 ║
 * ║                                               ║ Last mod.: 17 Jan. 2020 ╚══════════╣
 * ╠═══════════════════════════════════════════════╩════════════════════════════════════╣
 * ║A cube animated to rotate, where each face is a social media icon (plus one face    ║
 * ║for ?, in the event there are more options than faces).                             ║
 * ║   Includes:                                                                        ║
 * ║        i.   a bare-bones HTML page,                                                ║
 * ║ (this) ii.  a 'normal' version with with -webkit and vendor redundancies,          ║
 * ║        iii.  a debug version with colored borders to help ID animation boundaries. ║
 * ║                                                                                    ║
 * ║Shout out to the David Walsh Blog for getting the ball (or rather cube, as it       ║
 * ║were) rolling (https://davidwalsh.name/css-cube).                                   ║
 * ╠════════════════════════════════════════════════════════════════════════════════════╣
 * ║ For the latest version of this snippet, report a bug, or to contribute, please     ║ 
 * ║ visit:     https://gist.github.com/snealbli                                        ║
 * ║ or:        https://jsfiddle.net/teeer/y4kjxe1o/                                    ║
 * ╠════════════════════════════════════════════════════════════════════════════════════╣
 * ║                             by Samuel 'teer' Neal-Blim                             ║
 * ║                                                                                    ║
 * ║                              Site: prog.nealblim.com                               ║
 * ║                              Git:  github.com/snealbli                             ║
 * ║                         JSfiddle:  jsfiddle.net/user/teeer                         ║
 * ╠════════════════════════════════════════════════════════════════════════════════════╣
 * ║ Licensed under the GNU GPL v3.0; see https://www.gnu.org/licenses/gpl-3.0.txt      ║
 * ╚════════════════════════════════════════════════════════════════════════════════════╝
 */
@import url("https://fonts.googleapis.com/css?family=Numans");

* {     /* If this block cannot applied to the entire page, please enclose in .cube-container * { } */
    box-sizing: border-box;
    
    user-select:            none;   /* No text selection in this divs */
    -moz-user-select:       none;
    -ms-user-select:        none;
    -o-user-select:         none;
    -webkit-user-select:    none;
   -webkit-touch-callout:   none;   /* iOS only */
}

.cube-container {
    background-color: transparent;
    border: none;
    height: 5.657em;   /* 4em x sqrt(2)*/
    perspective: 16em;
    perspective-origin: 50% 2em;
    position: relative;
    width: 5.657em;
    z-index: 0;
}

.cube-container span {
    display: block; 
}

.cube-container:focus {
    border-color: inherit;
    -webkit-box-shadow: none;
    box-shadow: none;
    outline: none;
}

.cube, .cube-menu {
    position: relative;
    transform-style: preserve-3d;
    width: 4em;
}

.icon { 
    display: block;
    float: left; 
    height: 4em;
    position: absolute;
    text-align: center;
    width: 4em;
}

.icon i {
    font-size: 3.8em;
    left: 0.1em;
    position: absolute;
    top: 0.1em;
}

/***  Rotating cube  ***/
.cube {
    animation: rotate-cube 8s infinite linear;
    z-index: 1;
}

.cube span {
    display: block;
}

.cube:hover {
    cursor: pointer;
    -webkit-transform: scale(1.4);
    -moz-transform:    scale(1.4); 
    -ms-transform:     scale(1.4); 
    -o-transform:      scale(1.4); 
    transform:         scale(1.4); 
}

.top-face {
    -webkit-transform: translate3d(0, -4em, 0) rotateX(-90deg); 
    -moz-transform:    translate3d(0, -4em, 0) rotateX(-90deg); 
    -ms-transform:     translate3d(0, -4em, 0) rotateX(-90deg); 
    -o-transform:      translate3d(0, -4em, 0) rotateX(-90deg); 
    transform:         translate3d(0, -4em, 0) rotateX(-90deg); 
    transform-origin:  top right;
}

.back-face {
    -webkit-transform: translate3d(-4em, -4em, -4em) rotateY(-180deg); 
    -moz-transform:    translate3d(-4em, -4em, -4em) rotateY(-180deg); 
    -ms-transform:     translate3d(-4em, -4em, -4em) rotateY(-180deg); 
    -o-transform:      translate3d(-4em, -4em, -4em) rotateY(-180deg); 
    transform:         translate3d(-4em, -4em, -4em) rotateY(-180deg); 
    transform-origin:  top right;
}

.right-face {
    -webkit-transform: translate3d(0, -4em, -4em) rotateY(90deg); 
    -moz-transform:    translate3d(0, -4em, -4em) rotateY(90deg); 
    -ms-transform:     translate3d(0, -4em, -4em) rotateY(90deg); 
    -o-transform:      translate3d(0, -4em, -4em) rotateY(90deg); 
    transform:         translate3d(0, -4em, -4em) rotateY(90deg); 
    transform-origin:  top right;
}

.left-face {
    -webkit-transform: translate3d(0, -4em, -4em) rotateY(270deg); 
    -moz-transform:    translate3d(0, -4em, -4em) rotateY(270deg); 
    -ms-transform:     translate3d(0, -4em, -4em) rotateY(270deg); 
    -o-transform:      translate3d(0, -4em, -4em) rotateY(270deg); 
    transform:         translate3d(0, -4em, -4em) rotateY(270deg); 
    transform-origin:  bottom left;
}

.bottom-face {
    -webkit-transform: translate3d(0, -4em, -4em) rotateX(270deg); 
    -moz-transform:    translate3d(0, -4em, -4em) rotateX(270deg); 
    -ms-transform:     translate3d(0, -4em, -4em) rotateX(270deg); 
    -o-transform:      translate3d(0, -4em, -4em) rotateX(270deg); 
    transform:         translate3d(0, -4em, -4em) rotateX(270deg); 
    transform-origin:  bottom left;
}

.front-face {
    -webkit-transform: translate3d(0, -4em, 0); 
    -moz-transform:    translate3d(0, -4em, 0); 
    -ms-transform:     translate3d(0, -4em, 0); 
    -o-transform:      translate3d(0, -4em, 0); 
    transform:         translate3d(0, -4em, 0); 
    transform-origin:  bottom left;
}

.cube .linkedin {
    background-color: #fff;
    color: #0066bd;
}

.cube .github {
    background-color: black;
    color: #fff;
}

.cube .facebook {
    background-color: #4267ad;
    color: #fff;
}

.cube .google {
    animation: google-flicker 2s infinite linear;
    background-color: #fff;
    color: #3f86ed;
}

.cube .twitter {
    background-color: #fff;
    color: #00a1ec;
}

.cube .random {
    animation: random-flicker 1s infinite linear;
}

.random {   /*  SVG image taken and modified from https://www.flaticon.com/free-icons/question-mark  */
    animation: random-flicker 1s infinite linear;
    background-image: url("https://svgur.com/i/GoH.svg");
    background-position: center; 
    background-repeat: no-repeat;
    background-size: 80%;
}

/**  Make the Google 'g' change colors according to the Google company logo letters as it 
    rotates.  **/
@keyframes google-flicker {
    0% {
       color: rgba(63, 134, 237, 1);
    }
    16.67% {
       color: rgba(243, 63, 58, 1);
    }
    33.33% {
       color: rgba(254, 189, 63, 1);
    }
    50% {
       color: rgba(63, 134, 237, 1);
    }
    66.67% {
       color: rgba(0, 170, 92, 1);
    }
    83.33% {
       color: rgba(243, 63, 58, 1);
    }
    100% {
       color: rgba(63, 134, 237, 1);
    }
}

/**  Make the random/question mark face change color as it rotates.  **/
@keyframes random-flicker {
    0% {
       background-color: rgba(255, 0, 0, 1);
    }
    16.67% {
       background-color: rgba(255, 128, 0, 1);
    }
    33.33% {
       background-color: rgba(255, 255, 64, 1);
    }
    50% {
       background-color: rgba(0, 255, 0, 1);
    }
    66.67% {
       background-color: rgba(0, 0, 255, 1);
    }
    83.33% {
       background-color: rgba(191, 64, 255, 1);
    }
    100% {
       background-color: rgba(111, 0, 175, 1);
    }
}

/**  Rotates the entire cube, never going backwards, back to its starting position.  **/
@-webkit-keyframes rotate-cube {
    0% {
        -webkit-transform: translate3d(1em, 2em, 0) rotateX(0) rotateY(0);
        -moz-transform:    translate3d(1em, 2em, 0) rotateX(0) rotateY(0);
        -ms-transform:     translate3d(1em, 2em, 0) rotateX(0) rotateY(0);
        -o-transform:      translate3d(1em, 2em, 0) rotateX(0) rotateY(0);
        transform:         translate3d(1em, 2em, 0) rotateX(0) rotateY(0);
    }
    6.25% {
        -webkit-transform: translate3d(-2em, 2em, -4em) rotateX(-45deg) rotateY(-90deg);
        -moz-transform:    translate3d(-2em, 2em, -4em) rotateX(-45deg) rotateY(-90deg);
        -ms-transform:     translate3d(-2em, 2em, -4em) rotateX(-45deg) rotateY(-90deg);
        -o-transform:      translate3d(-2em, 2em, -4em) rotateX(-45deg) rotateY(-90deg);
        transform:         translate3d(-2em, 2em, -4em) rotateX(-45deg) rotateY(-90deg);
    }
    12.5% {
        -webkit-transform: translate3d(0, -2em, -4em) rotateX(-90deg) rotateY(-180deg);
        -moz-transform:    translate3d(0, -2em, -4em) rotateX(-90deg) rotateY(-180deg);
        -ms-transform:     translate3d(0, -2em, -4em) rotateX(-90deg) rotateY(-180deg);
        -o-transform:      translate3d(0, -2em, -4em) rotateX(-90deg) rotateY(-180deg);
        transform:         translate3d(0, -2em, -4em) rotateX(-90deg) rotateY(-180deg);
    }
    18.75% {
        -webkit-transform: translate3d(0, 2em, -4em) rotateY(-180deg) rotateY(-360deg);
        -moz-transform:    translate3d(0, 2em, -4em) rotateY(-180deg) rotateY(-360deg);
        -ms-transform:     translate3d(0, 2em, -4em) rotateY(-180deg) rotateY(-360deg);
        -o-transform:      translate3d(0, 2em, -4em) rotateY(-180deg) rotateY(-360deg);
        transform:         translate3d(0, 2em, -4em) rotateY(-180deg) rotateY(-360deg);
    }
    25% { 
        -webkit-transform: translate3d(2em, 2em, -2em) rotateY(-270deg) rotateY(-360deg);
        -moz-transform:    translate3d(2em, 2em, -2em) rotateY(-270deg) rotateY(-360deg);
        -ms-transform:     translate3d(2em, 2em, -2em) rotateY(-270deg) rotateY(-360deg);
        -o-transform:      translate3d(2em, 2em, -2em) rotateY(-270deg) rotateY(-360deg);
        transform:         translate3d(2em, 2em, -2em) rotateY(-270deg) rotateY(-360deg);
    }
    31.25% {
        -webkit-transform: translate3d(0, -2em, 0) rotateX(-270deg) rotateY(-360deg);
        -moz-transform:    translate3d(0, -2em, 0) rotateX(-270deg) rotateY(-360deg);
        -ms-transform:     translate3d(0, -2em, 0) rotateX(-270deg) rotateY(-360deg);
        -o-transform:      translate3d(0, -2em, 0) rotateX(-270deg) rotateY(-360deg);
        transform:         translate3d(0, -2em, 0) rotateX(-270deg) rotateY(-360deg);
    }
    37.5% {
        -webkit-transform: translate3d(-2em, 0, 0) rotateX(-270deg) rotateY(-450deg);
        -moz-transform:    translate3d(-2em, 0, 0) rotateX(-270deg) rotateY(-450deg);
        -ms-transform:     translate3d(-2em, 0, 0) rotateX(-270deg) rotateY(-450deg);
        -webkit-transform: translate3d(-2em, 0, 0) rotateX(-270deg) rotateY(-450deg);
        transform:         translate3d(-2em, 0, 0) rotateX(-270deg) rotateY(-450deg);
    }
    43.75% {
        -webkit-transform: translate3d(-2em, 2em, -4em) rotateX(-360deg) rotateY(-450deg);
        -moz-transform:    translate3d(-2em, 2em, -4em) rotateX(-360deg) rotateY(-450deg);
        -ms-transform:     translate3d(-2em, 2em, -4em) rotateX(-360deg) rotateY(-450deg);
        -o-transform:      translate3d(-2em, 2em, -4em) rotateX(-360deg) rotateY(-450deg);
        transform:         translate3d(-2em, 2em, -4em) rotateX(-360deg) rotateY(-450deg);
    }
    50% { 
        -webkit-transform: translate3d(0, 0, -4em) rotateX(-405deg) rotateY(-540deg);
        -moz-transform:    translate3d(0, 0, -4em) rotateX(-405deg) rotateY(-540deg);
        -ms-transform:     translate3d(0, 0, -4em) rotateX(-405deg) rotateY(-540deg);
        -o-transform:      translate3d(0, 0, -4em) rotateX(-405deg) rotateY(-540deg);
        transform:         translate3d(0, 0, -4em) rotateX(-405deg) rotateY(-540deg);
    }
    56.25% {
        -webkit-transform: translate3d(2em, 0, -4em) rotateX(-450deg) rotateY(-630deg);
        -moz-transform:    translate3d(2em, 0, -4em) rotateX(-450deg) rotateY(-630deg);
        -ms-transform:     translate3d(2em, 0, -4em) rotateX(-450deg) rotateY(-630deg);
        -o-transform:      translate3d(2em, 0, -4em) rotateX(-450deg) rotateY(-630deg);
        transform:         translate3d(2em, 0, -4em) rotateX(-450deg) rotateY(-630deg);
    }
    62.5% {
        -webkit-transform: translate3d(0, 0, -4em) rotateX(-495deg) rotateY(-720deg);
        -moz-transform:    translate3d(0, 0, -4em) rotateX(-495deg) rotateY(-720deg);
        -ms-transform:     translate3d(0, 0, -4em) rotateX(-495deg) rotateY(-720deg);
        -o-transform:      translate3d(0, 0, -4em) rotateX(-495deg) rotateY(-720deg);
        transform:         translate3d(0, 0, -4em) rotateX(-495deg) rotateY(-720deg);
    }
    68.75% {
        -webkit-transform: translate3d(0, -2em, 0) rotateX(-540deg) rotateY(-900deg);
        -moz-transform:    translate3d(0, -2em, 0) rotateX(-540deg) rotateY(-900deg);
        -ms-transform:     translate3d(0, -2em, 0) rotateX(-540deg) rotateY(-900deg);
        -o-transform:      translate3d(0, -2em, 0) rotateX(-540deg) rotateY(-900deg);
        transform:         translate3d(0, -2em, 0) rotateX(-540deg) rotateY(-900deg);
    }
    75% { 
        -webkit-transform: translate3d(2em, 2em, 0) rotateX(-630deg) rotateY(-945deg);
        -moz-transform:    translate3d(2em, 2em, 0) rotateX(-630deg) rotateY(-945deg);
        -ms-transform:     translate3d(2em, 2em, 0) rotateX(-630deg) rotateY(-945deg);
        -o-transform:      translate3d(2em, 2em, 0) rotateX(-630deg) rotateY(-945deg);
        transform:         translate3d(2em, 2em, 0) rotateX(-630deg) rotateY(-945deg);
    }
    81.25% {
        -webkit-transform: translate3d(2em, 0, 0) rotateX(-630deg) rotateY(-990deg);
        -moz-transform:    translate3d(2em, 0, 0) rotateX(-630deg) rotateY(-990deg);
        -ms-transform:     translate3d(2em, 0, 0) rotateX(-630deg) rotateY(-990deg);
        -o-transform:      translate3d(2em, 0, 0) rotateX(-630deg) rotateY(-990deg);
        transform:         translate3d(2em, 0, 0) rotateX(-630deg) rotateY(-990deg);
    }
    87.5% {
        -webkit-transform: translate3d(2em, 2em, 0) rotateX(-675deg) rotateY(-990deg);
        -moz-transform:    translate3d(2em, 2em, 0) rotateX(-675deg) rotateY(-990deg);
        -ms-transform:     translate3d(2em, 2em, 0) rotateX(-675deg) rotateY(-990deg);
        -o-transform:      translate3d(2em, 2em, 0) rotateX(-675deg) rotateY(-990deg);
        transform:         translate3d(2em, 2em, 0) rotateX(-675deg) rotateY(-990deg);
    }
    93.75% {
        -webkit-transform: translate3d(2em, 2em, -2em) rotateX(-720deg) rotateY(-990deg);
        -moz-transform:    translate3d(2em, 2em, -2em) rotateX(-720deg) rotateY(-990deg);
        -ms-transform:     translate3d(2em, 2em, -2em) rotateX(-720deg) rotateY(-990deg);
        -o-transform:      translate3d(2em, 2em, -2em) rotateX(-720deg) rotateY(-990deg);
        transform:         translate3d(2em, 2em, -2em) rotateX(-720deg) rotateY(-990deg);
    }
    100% { 
        -webkit-transform: translate3d(1em, 2em, 0) rotateX(-720deg) rotateY(-1080deg);
        -moz-transform:    translate3d(1em, 2em, 0) rotateX(-720deg) rotateY(-1080deg);
        -ms-transform:     translate3d(1em, 2em, 0) rotateX(-720deg) rotateY(-1080deg);
        -o-transform:      translate3d(1em, 2em, 0) rotateX(-720deg) rotateY(-1080deg);
        transform:         translate3d(1em, 2em, 0) rotateX(-720deg) rotateY(-1080deg);
    }
}